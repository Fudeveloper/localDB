// Generated by CoffeeScript 1.8.0
define(function(require, exports, module) {
  "use strict";
  var Utils;
  Utils = require("core/utils");
  return describe("sort", function() {
    it("quickSort simple asc", function() {
      var array, result, sortArray;
      array = [
        {
          count: 1
        }, {
          count: 3
        }, {}, {
          count: 2
        }
      ];
      sortArray = [
        {}, {
          count: 1
        }, {
          count: 2
        }, {
          count: 3
        }
      ];
      result = Utils.quickSort(array, "count", 1);
      return expect(sortArray).toEqual(result);
    });
    it("quickSort simple desc", function() {
      var array, result, sortArray;
      array = [
        {
          count: 1
        }, {
          count: 3
        }, {}, {
          count: 2
        }
      ];
      sortArray = [
        {
          count: 3
        }, {
          count: 2
        }, {
          count: 1
        }, {}
      ];
      result = Utils.quickSort(array, "count", -1);
      return expect(result).toEqual(sortArray);
    });
    it("quickSort complex asc", function() {
      var array, result, sortArray;
      array = [
        {
          obj: {
            obj: {
              count: 3
            }
          }
        }, {
          obj: {
            obj: {}
          }
        }, {
          obj: {
            obj: {
              count: 1
            }
          }
        }, {
          obj: {
            obj: {
              count: 2
            }
          }
        }, {
          obj: {}
        }
      ];
      sortArray = [
        {
          obj: {}
        }, {
          obj: {
            obj: {}
          }
        }, {
          obj: {
            obj: {
              count: 1
            }
          }
        }, {
          obj: {
            obj: {
              count: 2
            }
          }
        }, {
          obj: {
            obj: {
              count: 3
            }
          }
        }
      ];
      result = Utils.quickSort(array, "obj.obj.count", 1);
      return expect(sortArray).toEqual(result);
    });
    it("quickSort complex desc", function() {
      var array, result, sortArray;
      array = [
        {
          obj: {
            obj: {
              count: 3
            }
          }
        }, {
          obj: {
            obj: {}
          }
        }, {
          obj: {
            obj: {
              count: 1
            }
          }
        }, {
          obj: {
            obj: {
              count: 2
            }
          }
        }, {
          obj: {}
        }
      ];
      sortArray = [
        {
          obj: {
            obj: {
              count: 3
            }
          }
        }, {
          obj: {
            obj: {
              count: 2
            }
          }
        }, {
          obj: {
            obj: {
              count: 1
            }
          }
        }, {
          obj: {
            obj: {}
          }
        }, {
          obj: {}
        }
      ];
      result = Utils.quickSort(array, "obj.obj.count", -1);
      return expect(sortArray).toEqual(result);
    });
    it("sort complex", function() {
      var data, result, sort, sortData;
      data = [
        {
          obj: {
            obj: {
              count: 3,
              age: 3
            }
          }
        }, {
          obj: {
            obj: {}
          }
        }, {
          obj: {
            obj: {
              count: 1,
              age: 2
            }
          }
        }, {
          obj: {
            obj: {
              count: 2,
              age: 1
            }
          }
        }, {
          obj: {
            obj: {
              count: 2,
              age: 3
            }
          }
        }, {
          obj: {
            obj: {
              count: 2,
              age: 2
            }
          }
        }
      ];
      sortData = [
        {
          obj: {
            obj: {}
          }
        }, {
          obj: {
            obj: {
              count: 1,
              age: 2
            }
          }
        }, {
          obj: {
            obj: {
              count: 2,
              age: 3
            }
          }
        }, {
          obj: {
            obj: {
              count: 2,
              age: 2
            }
          }
        }, {
          obj: {
            obj: {
              count: 2,
              age: 1
            }
          }
        }, {
          obj: {
            obj: {
              count: 3,
              age: 3
            }
          }
        }
      ];
      sort = {
        "obj.obj.count": 1,
        "obj.obj.age": -1
      };
      result = Utils.sortObj(data, sort);
      return expect(result).toEqual(sortData);
    });
    return it("sort simple", function() {
      var data, result, sort, sortData;
      data = [
        {
          count: 3,
          age: 3
        }, {}, {
          count: 1,
          age: 2
        }, {
          count: 2,
          age: 1
        }, {
          count: 2,
          age: 3
        }, {
          count: 2,
          age: 2
        }
      ];
      sortData = [
        {}, {
          count: 1,
          age: 2
        }, {
          count: 2,
          age: 3
        }, {
          count: 2,
          age: 2
        }, {
          count: 2,
          age: 1
        }, {
          count: 3,
          age: 3
        }
      ];
      sort = {
        "count": 1,
        "age": -1
      };
      result = Utils.sortObj(data, sort);
      return expect(sortData).toEqual(result);
    });
  });
});

// Generated by CoffeeScript 1.8.0
define(function(require, exports, module) {
  "use strict";
  var Evemit;
  Evemit = require("lib/evemit");
  if (!HTMLElement.prototype.click) {
    HTMLElement.prototype.click = function() {
      var ev;
      ev = document.createEvent("MouseEvent");
      ev.initMouseEvent("click", true, true, window, null, 0, 0, 0, 0, false, false, false, false, 0, null);
      return this.dispatchEvent(ev);
    };
  }
  return describe("Evemit", function() {
    it("bind and unbind", function() {
      var btn, clickFn, div;
      div = document.createElement("div");
      div.innerHTML = "<a id='clickBtn'> Opps</a>";
      document.body.insertBefore(div, document.body.lastChild);
      btn = document.getElementById("clickBtn");
      clickFn = function() {
        return console.log("Button Clicked");
      };
      Evemit.bind(btn, "click", clickFn);
      btn.click();
      Evemit.unbind(btn, "click", clickFn);
      return btn.click();
    });
    it("Evemit", function() {
      var obj;
      obj = {
        a: 1,
        b: 2
      };
      obj = new Evemit(obj);
      obj.on("wow", function() {
        return console.log("This is first listener function!");
      });
      obj.on("wow", function() {
        return console.log("This is second listener function!");
      });
      expect(obj.listeners("wow").length).toEqual(2);
      obj.emit("wow");
      obj.once("wow_once", function() {
        return console.log("This could only be called once!");
      });
      expect(obj.events().length).toEqual(2);
      obj.emit("wow_once");
      expect(obj.events().length).toEqual(1);
      obj.emit("wow_once");
      obj.off("wow");
      return expect(obj.events().length).toEqual(0);
    });
    return it("Error", function() {
      var e, obj;
      obj = 1;
      try {
        return obj = new Evemit(obj);
      } catch (_error) {
        e = _error;
        return expect(e.message).toEqual("input type error: Input should be object");
      }
    });
  });
});

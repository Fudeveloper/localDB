// Generated by CoffeeScript 1.8.0
define(function(require, exports, module) {
  "use strict";
  var Collection, LocalDB, Support;
  LocalDB = require("localdb");
  Support = require("lib/support");
  Collection = require("core/collection");
  return describe("LocalDB", function() {
    it("wrong usage", function() {
      var db, e;
      try {
        return db = new LocalDB();
      } catch (_error) {
        e = _error;
        return expect(e.message).toEqual("dbName should be specified.");
      }
    });
    it("new LocalDB", function() {
      var db;
      db = new LocalDB("foo", {
        expire: "none",
        encrypt: false
      });
      return expect(db instanceof LocalDB).toEqual(true);
    });
    it("new LocalDB with proxy", function() {
      var db;
      db = new LocalDB("foo_proxy", {
        expire: "none",
        encrypt: false,
        proxy: "http://localdb.emptystack.net/server.html"
      });
      return expect(db instanceof LocalDB).toEqual(true);
    });
    it("options", function() {
      var db, options;
      db = new LocalDB("foo2", {
        expire: "window",
        encrypt: false
      });
      options = db.options();
      expect(options.name).toEqual("foo2");
      expect(options.expire).toEqual("window");
      expect(options.encrypt).toEqual(false);
      return expect(options.proxy != null).toEqual(false);
    });
    it("collection", function() {
      var collection, db;
      db = new LocalDB("foo3");
      collection = db.collection("bar");
      return expect(collection instanceof Collection).toEqual(true);
    });
    it("support", function() {
      var support;
      support = LocalDB.getSupport();
      return expect(support).toEqual(Support);
    });
    it("version", function() {

      /*
       *  在src/localdb.coffee中version为空
       *  实际上在build的时候会根据package.json中的版本号来进行改写。
       */
      var version;
      version = LocalDB.getVersion();
      console.log(version);
      return expect(version).toEqual("");
    });
    it("timestamp", function() {
      expect(LocalDB.getTimestamp("543509d5f3692b00001b2b61")).toBeDefined();
      return expect(LocalDB.getTime("543509d5f3692b00001b2b61")).toEqual(1412762069000);
    });
    return it("server init", function() {
      return LocalDB.init({
        allow: ["*.baidu.com", "pt.aliexpress.com"],
        deny: "map.baidu.com"
      });
    });
  });
});

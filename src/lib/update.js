// Generated by CoffeeScript 1.7.1
'use strict';
var Update, Utils, Where, generate, isKeyReserved, reservedKeys,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Where = require('./where');

Utils = require('./utils');

reservedKeys = ['$inc', '$set', '$mul', '$rename', '$unset', '$min'];

isKeyReserved = function(key) {
  return __indexOf.call(reservedKeys, key) >= 0;
};

generate = function(data, action, value, where, multi, upsert) {
  var d, firstKey, flag, k, v, _i, _len;
  if (!isKeyReserved(action)) {
    return data;
  }
  for (k in value) {
    v = value[k];
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      d = data[_i];
      if (!(Where(d, where))) {
        continue;
      }
      flag = false;
      while (k.indexOf(".") > 0) {
        firstKey = k.split(".")[0];
        d = d[firstKey];
        if ((d == null) && !upsert) {
          flag = true;
          break;
        }
        if (upsert) {
          d = d || {};
        }
        k = k.substr(k.indexOf(".") + 1);
      }
      if (flag) {
        continue;
      }
      switch (action) {
        case "$inc":
          d[k] += v;
          break;
        case "$set":
          d[k] = v;
          break;
        case "$mul":
          d[k] *= v;
          break;
        case "$rename":
          d[v] = d[k];
          delete d[k];
          break;
        case "$unset":
          delete d[k];
          break;
        case "$min":
          d[k] = Math.min(d[k], v);
          break;
        case "$max":
          d[k] = Math.max(d[k], v);
      }
      if (!multi) {
        break;
      }
    }
  }
  return data;
};

Update = function(data, actions, options) {
  var action, multi, upsert, value, where;
  where = options.where || {};
  multi = options.multi || false;
  upsert = options.upsert || false;
  for (action in actions) {
    value = actions[action];
    data = generate(data, action, value, where, multi, upsert);
  }
  return data;
};

module.exports = Update;

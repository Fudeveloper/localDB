// Generated by CoffeeScript 1.7.1
'use strict';
var Criteria, Projection, Utils, generateItem;

Utils = require('./utils');

Criteria = require('./criteria');

Projection = {};

Projection.generate = function(data, projection) {
  var d;
  if (JSON.stringify(projection) === "{}") {
    return data;
  }
  return (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      d = data[_i];
      _results.push(generateItem(d, projection));
    }
    return _results;
  })();
};

generateItem = function(item, projection) {
  var flag, i, key, r, result, v_key, v_value, value, _i, _len;
  result = {};
  for (key in projection) {
    value = projection[key];
    if (key.indexOf(".$") !== -1) {
      key = key.split(".")[0];
      if (!Utils.isArray(item[key]) || item[key].length === 0) {
        continue;
      }
      result[key] = [item[key][0]];
    } else if (key.indexOf("$elemMatch") === 0) {
      if (!Utils.isArray(item) || item.length === 0) {
        continue;
      }
      r = [];
      for (_i = 0, _len = item.length; _i < _len; _i++) {
        i = item[_i];
        flag = true;
        for (v_key in value) {
          v_value = value[v_key];
          if (Utils.isObject(v_value)) {
            console.log("TODO");
          } else {
            if (i[v_key] !== v_value) {
              flag = false;
            }
          }
        }
        if (flag) {
          r.push(i);
        }
      }
      return r;
    } else if (Utils.isObject(value)) {
      result[key] = generateItem(item[key], value);
    } else {
      if (value === 1) {
        result[key] = item[key];
      }
    }
  }
  return result;
};

module.exports = Projection;

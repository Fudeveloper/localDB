// Generated by CoffeeScript 1.7.1
'use strict';
var Engine, Support;

Support = require('./support');

Engine = (function() {
  function Engine(type) {
    this.type = type === 2 ? 2 : 1;
    if (!Support.sessionstorage()) {
      if (type === 1) {
        throw new Error("sessionstorage is not supported!");
      }
      if (Support.userdata()) {
        throw new Error("no browser storage engine is supported in your browser!");
      }
      this.type = 2;
    }
    return;
  }

  Engine.prototype.key = function(name) {
    if (this.type === 1) {
      return sessionStorage.key(name);
    } else if (Support.localstorage()) {
      return localStorage.key(name);
    } else {
      return console.log("userdata TODO");
    }
  };

  Engine.prototype.size = function() {
    if (this.type === 1) {
      return sessionStorage.length;
    } else if (Support.localstorage()) {
      return localStorage.length;
    } else {
      return console.log("userdata TODO");
    }
  };

  Engine.prototype.setItem = function(key, val) {
    if (this.type === 1) {
      return sessionStorage.setItem(key, val);
    } else if (Support.localstorage()) {
      return localStorage.setItem(key, val);
    } else {
      return console.log("userdata TODO");
    }
  };

  Engine.prototype.getItem = function(key) {
    if (this.type === 1) {
      return sessionStorage.getItem(key);
    } else if (Support.localstorage()) {
      return localStorage.getItem(key);
    } else {
      return console.log("userdata TODO");
    }
  };

  Engine.prototype.removeItem = function(key) {
    if (this.type === 1) {
      return sessionStorage.removeItem(key);
    } else if (Support.localstorage()) {
      return localStorage.removeItem(key);
    } else {
      return console.log("userdata TODO");
    }
  };

  return Engine;

})();

module.exports = Engine;
